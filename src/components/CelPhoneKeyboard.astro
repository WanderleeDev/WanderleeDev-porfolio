---
import KeyboardRow from '../shared/KeyboardRow.astro'

const keyboardLetters = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ðŸ¡±', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'âŒ«']
const keyboardSpecialCaracter = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '@', '#', '$', '_', '&', '-', '+', '(', ')', '/', '*', '"', "'",':', ';', '!', 'Â¡', 'Â¿', '?']
const keyboardControls = ['&123', '.com', 'space', '.', 'ðŸ¡²']

---
<aside class="bg-[#1E1E1E] absolute top-0 -translate-y-full grid w-full">

  <form class="w-full grid grid-cols-[auto_1fr] gap-2 px-4 py-2" autocomplete="off">
    <button
      id="btn-reload"
      class="text-[#9A9A9A] w-8 h-8 rounded-[50%] border-2 border-current hover:text-white"
      aria-label="reload" 
      type="button"
    >
      &#10227;
    </button>
    <input
      class="w-full px-2" 
      id="searchBar" 
      type="text" 
      name="text"
    >
  </form>

  <div id="keyboard" class="text-white grid gap-2">
    <KeyboardRow keyboardLetters={keyboardLetters.slice(0, 10)}/>
    <KeyboardRow keyboardLetters={keyboardLetters.slice(10, 19)}  customStyles={['gric-cols-9']}/>


<div class="grid gap-2 grid-cols-9 px-8">
  {keyboardLetters.slice(10, 19).map(letter => (
    <button 
      data-caracter={letter} 
      class="bg-[#464646] hover:bg-[#EEEEEE] hover:text-[#1E1E1E] py-4 px-1 min-w-[2rem] text-xs sm:text-lg"
      aria-label=`letter ${letter}`
      type="button"
    >
      {letter}
    </button>)
  )}
</div>

<div class="grid gap-2 grid-cols-9 px-4">
  {keyboardLetters.slice(19, 28).map(letter => (
    <button 
      data-caracter={letter} 
      class="bg-[#464646] hover:bg-[#EEEEEE] hover:text-[#1E1E1E] py-4 px-1 min-w-[2rem] text-xs sm:text-lg"
      aria-label=`letter ${letter}`
      type="button"
    >
      {letter}
    </button>)
  )}
</div>

<div class="grid gap-2 grid-cols-[auto_auto_1fr_auto_auto] px-4 pb-2 ">
  {keyboardControls.map(letter => (
    <button 
      data-caracter={letter} 
      class="bg-[#464646] hover:bg-[#EEEEEE] hover:text-[#1E1E1E] py-4 px-1 min-w-[2rem] text-xs sm:text-lg"
      aria-label=`letter ${letter}`
      type="button"
    >
      {letter}
    </button>)
  )}
</div>

    <!-- <div 
      data-board="back" 
      class="grid grid-rows-4 gap-2 grid-cols-10 px-4 py-2"
    >
      {keyboardSpecialCaracter.map(caracter => (
        <button 
          data-caracter={caracter} 
          class="bg-[#464646] hover:bg-[#EEEEEE] hover:text-[#1E1E1E] text-xs sm:text-lg" 
          type="button"
        >
          {caracter}
        </button>)
      )}
    </div> -->
  </div>

</aside>

<script>
  const searchBar = document.querySelector('#searchBar') as HTMLInputElement
  const keyBoard = document.querySelector('#keyboard') as HTMLDivElement

  const keyboardHandler = (e: Event): void => {
    if (e.target instanceof HTMLButtonElement && e.target.dataset.caracter) {
      const currentValue = e.target.getAttribute('data-caracter')

      if (currentValue === null) return
      if (currentValue === 'space') {
        searchBar.value += ' '
      } else if (currentValue === 'âŒ«') {
        searchBar.value = searchBar.value.slice(0, -1)
      } else if (currentValue === 'ðŸ¡±') {
        searchBar.value += 'no'
      } else if (currentValue === 'ðŸ¡²') {
        searchBar.value += 'si'
      } else if (currentValue === '&123') {
        searchBar.value += 'change'
      } else {
        searchBar.value += currentValue;
      }
    }
  }

  keyBoard?.addEventListener('click', (e: MouseEvent): void => keyboardHandler(e))
</script>